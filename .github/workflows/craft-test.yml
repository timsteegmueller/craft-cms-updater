name: craft-test-mini
on:
  workflow_dispatch:
  repository_dispatch:
    types: [craft-cms-updater]
    inputs:
      dry_run: {description: 'Nur anzeigen', type: boolean, default: false}
      skip_backup: {description: 'DB-Backup überspringen', type: boolean, default: true}
      prepare_pr: {description: 'PR erstellen', type: boolean, default: true}

permissions: {contents: write, pull-requests: write}

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: {fetch-depth: 0}

      - uses: shivammathur/setup-php@v2
        with: {php-version: '8.2', coverage: none, tools: composer}

      - name: Composer install (root)
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Composer install (craft)
        working-directory: ./craft
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Run update
        working-directory: ./craft
        run: |
          if [ "${{ inputs.dry_run }}" = "true" ]; then
            echo "Dry run"; php craft update/info || echo "No info"; exit 0
          fi
          if [ "${{ inputs.skip_backup }}" != "true" ]; then
            mkdir -p ../backups
            php craft db/backup ../backups/db_$(date +%F_%H-%M-%S).sql || echo "Backup skipped"
          fi
          echo "Updating Craft (no DB required to proceed)"
          php craft update all --interactive=0 --backup=0 || echo "Craft update warnings"
          composer update --no-interaction --no-progress || echo "Composer update warnings"

      - name: Set PR meta
        run: echo "DATE=$(date +%Y-%m-%d)" >> $GITHUB_ENV

      - name: Ensure change when no lock diff
        run: |
          if [ -z "$(git status --porcelain craft/composer.lock)" ]; then
            mkdir -p docs
            date -u +"%Y-%m-%dT%H:%M:%SZ" > docs/last-update.txt
            git add docs/last-update.txt
          fi

      - name: Ensure change
        run: |
          mkdir -p docs
          date -u +"%Y-%m-%dT%H:%M:%SZ" > docs/last-update.txt
  # 1) Datum für den PR-Titel
      - name: Set PR meta
        run: echo "DATE=$(date +%Y-%m-%d)" >> $GITHUB_ENV
      
      # 2) Changelog aus craft/composer.lock bauen (nur direkte Deps)
      - name: Changelog (craft/)
        id: cl
        working-directory: ./craft
        run: |
          composer outdated --direct --format=json > /tmp/outdated.json || true
          jq -r '.installed[]? | "- **\(.name)** \(.version) → \(.latest)\t(\(.latest-status // "latest"))"' /tmp/outdated.json > /tmp/changelog.md || true
          [ -s /tmp/changelog.md ] || echo "No direct dependency changes." > /tmp/changelog.md
      
      # 3) PR-Body zusammenstellen (mit „Files changed“ und Link zum Run)
      - name: Build PR body
        run: |
          RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          {
          echo "## Craft CMS Update"
          echo
          echo "**Date:** ${{ env.DATE }}"
          echo "**Trigger:** ${{ github.event_name }}${{ github.event.action && format(' ({0})', github.event.action) || '' }}"
          echo
          echo "### Files changed"
          echo "- craft/composer.lock – Updated dependencies"
          if [ -n "$(git status --porcelain craft/backups | head -n1)" ]; then
           echo "- craft/backups – New backup file"
          fi
          echo
          echo "### Changelog (direct deps)"
          cat /tmp/changelog.md
          echo
          echo "[View run]($RUN_URL)"
          } > PR_BODY.md
    
    
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
                token: ${{ secrets.GITHUB_TOKEN }}
                branch: update/craft-run-${{ github.run_number }}
                delete-branch: true
                commit-message: Update Craft CMS dependencies - Run ${{ github.run_number }}
                title: Craft CMS Update - Run ${{ github.run_number }}
                body: |
                  ## Craft CMS Update
                  
                  **Details:**
                  - Backup created: ${{ !inputs.skip_backup && '✅' || '⏭️' }}
                  - Dry run: ${{ inputs.dry_run && '🧪' || '✅' }}
                  - Trigger: ${{ github.event_name }}
                  - Run: [${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
                  
                  **Files changed:**
                  - `craft/composer.lock` - Updated dependencies
                  - `craft/storage/backups/` - New backup file
                  
                  **Next steps:**
                  - Review changes
                  - Test on staging
                  - Merge for production deployment



