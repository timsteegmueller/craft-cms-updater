{"version":3,"file":"js/code-editor.js","mappings":"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D,oBAAqB,CACpB,MAED,uBAAwB,CACvB,MAED,0BAA2B,CAC1B,MAED,6BAA8B,CAC7B,MAED,sBAAuB,CACtB,MAED,yBAA0B,CACzB,MAED,sBAAuB,CACtB,KAED,yBAA0B,CACzB,KAED,6BAA8B,CAC7B,IAED,gCAAiC,CAChC,IAED,UAAW,CACV,MAED,aAAc,CACb,MAED,iBAAkB,CACjB,KAED,oBAAqB,CACpB,KAED,oBAAqB,CACpB,MAED,uBAAwB,CACvB,MAED,sBAAuB,CACtB,MAED,yBAA0B,CACzB,MAED,kCAAmC,CAClC,MAED,qCAAsC,CACrC,MAED,0BAA2B,CAC1B,MAED,6BAA8B,CAC7B,MAED,iCAAkC,CACjC,MAED,oCAAqC,CACpC,MAED,qCAAsC,CACrC,MAED,wCAAyC,CACxC,MAED,yCAA0C,CACzC,KACA,IAED,4CAA6C,CAC5C,KACA,IAED,8BAA+B,CAC9B,MAED,iCAAkC,CACjC,MAED,4BAA6B,CAC5B,MAED,+BAAgC,CAC/B,MAED,iBAAkB,CACjB,MAED,oBAAqB,CACpB,MAED,wBAAyB,CACxB,MAED,2BAA4B,CAC3B,MAED,gCAAiC,CAChC,MAED,mCAAoC,CACnC,MAED,4DAA6D,CAC5D,MAED,+DAAgE,CAC/D,MAED,iEAAkE,CACjE,KAED,oEAAqE,CACpE,KAED,2DAA4D,CAC3D,KAED,8DAA+D,CAC9D,KAED,+DAAgE,CAC/D,MAED,kEAAmE,CAClE,MAED,iEAAkE,CACjE,MAED,oEAAqE,CACpE,MAED,6DAA8D,CAC7D,MAED,gEAAiE,CAChE,MAED,sEAAuE,CACtE,MAED,yEAA0E,CACzE,MAED,+DAAgE,CAC/D,MAED,kEAAmE,CAClE,MAED,sEAAuE,CACtE,MAED,yEAA0E,CACzE,MAED,8DAA+D,CAC9D,MAED,iEAAkE,CACjE,MAED,oEAAqE,CACpE,MAED,uEAAwE,CACvE,MAED,gEAAiE,CAChE,MAED,mEAAoE,CACnE,MAED,gEAAiE,CAChE,KAED,mEAAoE,CACnE,KAED,uEAAwE,CACvE,IAED,0EAA2E,CAC1E,IAED,oDAAqD,CACpD,MAED,uDAAwD,CACvD,MAED,2DAA4D,CAC3D,KAED,8DAA+D,CAC9D,KAED,8DAA+D,CAC9D,MAED,iEAAkE,CACjE,MAED,gEAAiE,CAChE,MAED,mEAAoE,CACnE,MAED,4EAA6E,CAC5E,MAED,+EAAgF,CAC/E,MAED,oEAAqE,CACpE,MAED,uEAAwE,CACvE,MAED,2EAA4E,CAC3E,MAED,8EAA+E,CAC9E,MAED,+EAAgF,CAC/E,MAED,kFAAmF,CAClF,MAED,mFAAoF,CACnF,KACA,IAED,sFAAuF,CACtF,KACA,IAED,wEAAyE,CACxE,MAED,2EAA4E,CAC3E,MAED,sEAAuE,CACtE,MAED,yEAA0E,CACzE,MAED,2DAA4D,CAC3D,MAED,8DAA+D,CAC9D,MAED,kEAAmE,CAClE,MAED,qEAAsE,CACrE,MAED,0EAA2E,CAC1E,MAED,6EAA8E,CAC7E,OAGF,SAASC,EAAoBC,GAC5B,IAAII,EAAoBC,EAAEP,EAAKE,GAC9B,OAAOC,QAAQC,UAAUC,MAAK,WAC7B,IAAIG,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,CACP,IAGD,IAAIqO,EAAM7O,EAAIE,GAAMW,EAAKgO,EAAI,GAC7B,OAAO1O,QAAQ2O,IAAID,EAAIxH,MAAM,GAAGrH,IAAIM,EAAoBE,IAAIH,MAAK,WAChE,OAAOC,EAAoBO,EAC5B,GACD,CACAZ,EAAoBU,KAAO,WAAa,OAAOC,OAAOD,KAAKX,EAAM,EACjEC,EAAoBY,GAAK,KACzBC,EAAOC,QAAUd,C","sources":["webpack://Buildchain/./node_modules/monaco-editor/esm/vs/base/common/worker/ lazy ^.*$ namespace object","webpack://Buildchain/../src/web/assets/src/js/twig-autocomplete.ts","webpack://Buildchain/../src/web/assets/src/js/language-icons.ts","webpack://Buildchain/../src/web/assets/src/js/default-monaco-options.ts","webpack://Buildchain/../src/web/assets/src/js/code-editor.ts","webpack://Buildchain/./node_modules/monaco-editor/esm/vs/editor/common/services/ lazy ^.*$ namespace object"],"sourcesContent":["var map = {\n\t\"./simpleWorker\": 5585,\n\t\"./simpleWorker.js\": 5585,\n\t\"monaco-editor/esm/vs/base/common/worker/simpleWorker\": 5585,\n\t\"monaco-editor/esm/vs/base/common/worker/simpleWorker.js\": 5585\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 5890;\nmodule.exports = webpackAsyncContext;","/**\n * CodeEditor for Craft CMS\n *\n * Provides a code editor field with Twig & Craft API autocomplete\n *\n * @link      https://nystudio107.com\n * @copyright Copyright (c) 2022 nystudio107\n */\n\n/**\n * @author    nystudio107\n * @package   CodeEditor\n * @since     1.0.0\n */\n\ndeclare global {\n  interface Window {\n    monaco: string;\n    monacoAutocompleteItems: { [key: string]: string },\n    codeEditorFieldTypes: { [key: string]: string },\n  }\n}\n\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\n\nconst COMPLETION_KEY = '__completions';\n\n/**\n * Get the last item from the array\n *\n * @param {Array} arr\n * @returns {unknown}\n */\nfunction getLastItem<T>(arr: Array<T>): T {\n  return arr[arr.length - 1];\n}\n\n/**\n * Register completion items with the Monaco editor, for the Twig language\n *\n * @param {AutocompleteItem} completionItems - completion items, with sub-properties in `COMPLETION_KEY`\n * @param {AutocompleteTypes} autocompleteType - the type of autocomplete\n * @param {boolean} hasSubProperties - whether the autocomplete has sub-properties, and should be parsed as such\n */\nfunction addCompletionItemsToMonaco(completionItems: AutocompleteItem, autocompleteType: AutocompleteTypes, hasSubProperties: boolean): void {\n  monaco.languages.registerCompletionItemProvider('twig', {\n    triggerCharacters: ['.', '('],\n    provideCompletionItems: function (model, position, token) {\n      const result: monaco.languages.CompletionItem[] = [];\n      let currentItems = completionItems;\n      // Get the last word the user has typed\n      const currentLine = model.getValueInRange({\n        startLineNumber: position.lineNumber,\n        startColumn: 0,\n        endLineNumber: position.lineNumber,\n        endColumn: position.column\n      });\n      let inTwigExpression = true;\n      // Ensure we're inside of a Twig expression\n      if (currentLine.lastIndexOf('{') === -1) {\n        inTwigExpression = false;\n      }\n      const startExpression = currentLine.substring(currentLine.lastIndexOf('{'));\n      if (startExpression.indexOf('}') !== -1) {\n        inTwigExpression = false;\n      }\n      // We are not in a Twig expression, and this is a TwigExpressionAutocomplete, return nothing\n      if (!inTwigExpression && autocompleteType === 'TwigExpressionAutocomplete') {\n        return null;\n      }\n      // Get the current word we're typing\n      const currentWords = currentLine.replace(\"\\t\", \"\").split(\" \");\n      let currentWord = currentWords[currentWords.length - 1];\n      // If the current word includes { or ( or >, split on that, too, to allow the autocomplete to work in nested functions and HTML tags\n      if (currentWord.includes('{')) {\n        currentWord = getLastItem(currentWord.split('{'));\n      }\n      if (currentWord.includes('(')) {\n        currentWord = getLastItem(currentWord.split('('));\n      }\n      if (currentWord.includes('>')) {\n        currentWord = getLastItem(currentWord.split('>'));\n      }\n      const isSubProperty = currentWord.charAt(currentWord.length - 1) === \".\";\n      // If we're in a sub-property (following a .) don't present non-TwigExpressionAutocomplete items\n      if (isSubProperty && autocompleteType !== 'TwigExpressionAutocomplete') {\n        return null;\n      }\n      // We are in a Twig expression, handle TwigExpressionAutocomplete by walking through the properties\n      if (inTwigExpression && autocompleteType === 'TwigExpressionAutocomplete') {\n        // If the last character typed is a period, then we need to look up a sub-property of the completionItems\n        if (isSubProperty) {\n          // If we're in a sub-property, and this autocomplete doesn't have sub-properties, don't return its items\n          if (!hasSubProperties) {\n            return null;\n          }\n          // Is a sub-property, get a list of parent properties\n          const parents = currentWord.substring(0, currentWord.length - 1).split(\".\");\n          if (typeof completionItems[parents[0]] !== 'undefined') {\n            currentItems = completionItems[parents[0]];\n            // Loop through all the parents to traverse the completion items and find the current one\n            for (let i = 1; i < parents.length; i++) {\n              if (currentItems.hasOwnProperty(parents[i])) {\n                currentItems = currentItems[parents[i]];\n              } else {\n                const finalItems: monaco.languages.ProviderResult<monaco.languages.CompletionList> = {\n                  suggestions: result\n                }\n                return finalItems;\n              }\n            }\n          }\n        }\n      }\n      // Get all the child properties\n      if (typeof currentItems !== 'undefined') {\n        for (const item in currentItems) {\n          if (currentItems.hasOwnProperty(item) && !item.startsWith(\"__\")) {\n            const completionItem = currentItems[item][COMPLETION_KEY];\n            if (typeof completionItem !== 'undefined') {\n              // Monaco adds a 'range' to the object, to denote where the autocomplete is triggered from,\n              // which needs to be removed each time the autocomplete objects are re-used\n              delete completionItem.range;\n              if ('documentation' in completionItem && typeof completionItem.documentation !== 'object') {\n                const docs = completionItem.documentation;\n                completionItem.documentation = {\n                  value: docs,\n                  isTrusted: true,\n                  supportsHtml: true\n                }\n              }\n              // Add to final results\n              result.push(completionItem);\n            }\n          }\n        }\n      }\n\n      const finalItems: monaco.languages.ProviderResult<monaco.languages.CompletionList> = {\n        suggestions: result\n      }\n      return finalItems;\n    }\n  });\n}\n\n/**\n * Register hover items with the Monaco editor, for the Twig language\n *\n * @param {AutocompleteItem} completionItems - completion items, with sub-properties in `COMPLETION_KEY`\n * @param {AutocompleteTypes} autocompleteType the type of autocomplete\n */\nfunction addHoverHandlerToMonaco(completionItems: AutocompleteItem, autocompleteType: AutocompleteTypes): void {\n  monaco.languages.registerHoverProvider('twig', {\n    provideHover: function (model, position) {\n      const currentLine = model.getValueInRange({\n        startLineNumber: position.lineNumber,\n        startColumn: 0,\n        endLineNumber: position.lineNumber,\n        endColumn: model.getLineMaxColumn(position.lineNumber)\n      });\n      const currentWord = model.getWordAtPosition(position);\n      if (currentWord === null) {\n        return;\n      }\n      let searchLine = currentLine.substring(0, currentWord.endColumn - 1)\n      let isSubProperty = false;\n      let currentItems = completionItems;\n      for (let i = searchLine.length; i >= 0; i--) {\n        if (searchLine[i] === ' ') {\n          searchLine = currentLine.substring(i + 1, searchLine.length);\n          break;\n        }\n      }\n      if (searchLine.includes('.')) {\n        isSubProperty = true;\n      }\n      if (isSubProperty) {\n        // Is a sub-property, get a list of parent properties\n        const parents = searchLine.substring(0, searchLine.length).split(\".\");\n        // Loop through all the parents to traverse the completion items and find the current one\n        for (let i = 0; i < parents.length - 1; i++) {\n          const thisParent = parents[i].replace(/[{(<]/, '');\n          if (currentItems.hasOwnProperty(thisParent)) {\n            currentItems = currentItems[thisParent];\n          } else {\n            return;\n          }\n        }\n      }\n      if (typeof currentItems !== 'undefined' && typeof currentItems[currentWord.word] !== 'undefined') {\n        const completionItem = currentItems[currentWord.word][COMPLETION_KEY];\n        if (typeof completionItem !== 'undefined') {\n          let docs = completionItem.documentation;\n          if (typeof completionItem.documentation === 'object') {\n            docs = completionItem.documentation.value;\n          }\n\n          const finalHover: monaco.languages.ProviderResult<monaco.languages.Hover> = {\n            range: new monaco.Range(position.lineNumber, currentWord.startColumn, position.lineNumber, currentWord.endColumn),\n            contents: [\n              {value: '**' + completionItem.detail + '**'},\n              {value: docs},\n            ]\n          }\n          return finalHover\n        }\n      }\n\n      return;\n    }\n  });\n}\n\n/**\n * Fetch the autocompletion items frin the endpoint\n *\n * @param {string} fieldType - The field's passed in type, used for autocomplete caching\n * @param {string} codeEditorOptions - JSON encoded string of arbitrary CodeEditorOptions for the field\n * @param {string} endpointUrl - The controller action endpoint for generating autocomplete items\n */\nfunction getCompletionItemsFromEndpoint(fieldType = 'CodeEditor', codeEditorOptions = '', endpointUrl: string): void {\n  const searchParams = new URLSearchParams();\n  if (typeof fieldType !== 'undefined') {\n    searchParams.set('fieldType', fieldType);\n  }\n  if (typeof codeEditorOptions !== 'undefined') {\n    searchParams.set('codeEditorOptions', codeEditorOptions);\n  }\n  const glueChar = endpointUrl.includes('?') ? '&' : '?';\n  // Only issue the XHR if we haven't loaded the autocompletes for this fieldType already\n  if (typeof window.codeEditorFieldTypes === 'undefined') {\n    window.codeEditorFieldTypes = {};\n  }\n  if (fieldType in window.codeEditorFieldTypes) {\n    return;\n  }\n  window.codeEditorFieldTypes[fieldType] = fieldType;\n  // Ping the controller endpoint\n  const request = new XMLHttpRequest();\n  request.open('GET', endpointUrl + glueChar + searchParams.toString(), true);\n  request.onload = function () {\n    if (request.status >= 200 && request.status < 400) {\n      const completionItems: AutocompleteResponse = JSON.parse(request.responseText);\n      if (typeof window.monacoAutocompleteItems === 'undefined') {\n        window.monacoAutocompleteItems = {};\n      }\n      // Don't add a completion more than once, as might happen with multiple CodeEDitor instances\n      // on the same page, because the completions are global in Monaco\n      for (const [name, autocomplete] of Object.entries(completionItems)) {\n        if (!(autocomplete.name in window.monacoAutocompleteItems)) {\n          window.monacoAutocompleteItems[autocomplete.name] = autocomplete.name;\n          addCompletionItemsToMonaco(autocomplete.__completions, autocomplete.type, autocomplete.hasSubProperties);\n          addHoverHandlerToMonaco(autocomplete.__completions, autocomplete.type);\n        }\n      }\n    } else {\n      console.log('Autocomplete endpoint failed with status ' + request.status)\n    }\n  };\n  request.send();\n}\n\nexport {getCompletionItemsFromEndpoint};\n","interface StringMap {\n  [key: string]: string;\n}\n\nexport const languageIcons: StringMap = {\n  // Default\n  'default': `<svg width=\"8px\" height=\"8px\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 320 320\" style=\"enable-background:new 0 0 320 320;\" xml:space=\"preserve\">\n<style type=\"text/css\">.st0{fill:currentcolor;}</style>\n<g>\n\\t<path class=\"st0\" d=\"M128,35.6c-17.7,0-32,15.9-32,35.6v35.6c0,29.5-21.5,53.3-48,53.3c26.5,0,48,23.9,48,53.3v35.6\n\\t\\tc0,19.6,14.3,35.6,32,35.6V320H96c-35.3,0-64-31.9-64-71.1v-35.6c0-19.6-14.3-35.6-32-35.6v-35.6c17.7,0,32-15.9,32-35.6V71.1\n\\t\\tC32,31.9,60.7,0,96,0h32V35.6L128,35.6z\"/>\n\\t<path class=\"st0\" d=\"M320,177.8c-17.7,0-32,15.9-32,35.6v35.6c0,39.2-28.7,71.1-64,71.1h-32v-35.6c17.7,0,32-15.9,32-35.6v-35.6\n\\t\\tc0-29.5,21.5-53.3,48-53.3c-26.5,0-48-23.9-48-53.3V71.1c0-19.6-14.3-35.6-32-35.6V0h32c35.3,0,64,31.9,64,71.1v35.6\n\\t\\tc0,19.6,14.3,35.6,32,35.6V177.8L320,177.8z\"/>\n</g>\n</svg>`,\n  // Twig\n  'twig': `<svg width=\"8px\" height=\"8px\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 320 320\" style=\"enable-background:new 0 0 320 320;\" xml:space=\"preserve\">\n<style type=\"text/css\">.st0{fill:currentcolor;}</style>\n<g>\n\\t<path class=\"st0\" d=\"M128,35.6c-17.7,0-32,15.9-32,35.6v35.6c0,29.5-21.5,53.3-48,53.3c26.5,0,48,23.9,48,53.3v35.6\n\\t\\tc0,19.6,14.3,35.6,32,35.6V320H96c-35.3,0-64-31.9-64-71.1v-35.6c0-19.6-14.3-35.6-32-35.6v-35.6c17.7,0,32-15.9,32-35.6V71.1\n\\t\\tC32,31.9,60.7,0,96,0h32V35.6L128,35.6z\"/>\n\\t<path class=\"st0\" d=\"M320,177.8c-17.7,0-32,15.9-32,35.6v35.6c0,39.2-28.7,71.1-64,71.1h-32v-35.6c17.7,0,32-15.9,32-35.6v-35.6\n\\t\\tc0-29.5,21.5-53.3,48-53.3c-26.5,0-48-23.9-48-53.3V71.1c0-19.6-14.3-35.6-32-35.6V0h32c35.3,0,64,31.9,64,71.1v35.6\n\\t\\tc0,19.6,14.3,35.6,32,35.6V177.8L320,177.8z\"/>\n</g>\n</svg>`,\n  // JavaScript\n  'javascript': `\n <svg width=\"12px\" height=\"12px\" viewBox=\"0 0 256 289\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid\">\n <style type=\"text/css\">.st0{fill:currentcolor;}</style>\n   <g>\n        <path class=\"st0\" d=\"M127.999999,288.463771 C124.024844,288.463771 120.314699,287.403728 116.869564,285.548656 L81.6231884,264.612838 C76.32298,261.697724 78.9730854,260.637682 80.5631458,260.107661 C87.7184259,257.72257 89.0434775,257.192547 96.4637688,252.952381 C97.2587979,252.422361 98.3188405,252.687372 99.1138718,253.217392 L126.144927,269.383024 C127.20497,269.913045 128.530021,269.913045 129.325053,269.383024 L235.064182,208.165634 C236.124225,207.635611 236.654245,206.575571 236.654245,205.250519 L236.654245,83.0807467 C236.654245,81.7556929 236.124225,80.6956526 235.064182,80.1656324 L129.325053,19.2132506 C128.26501,18.6832305 126.939959,18.6832305 126.144927,19.2132506 L20.4057954,80.1656324 C19.3457551,80.6956526 18.8157349,82.0207041 18.8157349,83.0807467 L18.8157349,205.250519 C18.8157349,206.31056 19.3457551,207.635611 20.4057954,208.165634 L49.2919247,224.861286 C64.9275364,232.811595 74.7329196,223.536234 74.7329196,214.260871 L74.7329196,93.681159 C74.7329196,92.0910985 76.0579711,90.5010358 77.9130428,90.5010358 L91.4285716,90.5010358 C93.0186343,90.5010358 94.6086948,91.8260873 94.6086948,93.681159 L94.6086948,214.260871 C94.6086948,235.196689 83.2132512,247.387164 63.3374737,247.387164 C57.2422362,247.387164 52.4720502,247.387164 38.9565214,240.761906 L11.1304347,224.861286 C4.24016581,220.886129 5.68434189e-14,213.46584 5.68434189e-14,205.515528 L5.68434189e-14,83.3457557 C5.68434189e-14,75.3954465 4.24016581,67.9751552 11.1304347,64.0000006 L116.869564,2.78260752 C123.494824,-0.927535841 132.505176,-0.927535841 139.130436,2.78260752 L244.869565,64.0000006 C251.759834,67.9751552 256,75.3954465 256,83.3457557 L256,205.515528 C256,213.46584 251.759834,220.886129 244.869565,224.861286 L139.130436,286.078676 C135.685299,287.668739 131.710145,288.463771 127.999999,288.463771 L127.999999,288.463771 Z M160.596274,204.455488 C114.219461,204.455488 104.679089,183.254659 104.679089,165.233955 C104.679089,163.643893 106.004141,162.053832 107.859212,162.053832 L121.639752,162.053832 C123.229813,162.053832 124.554864,163.113872 124.554864,164.703935 C126.674947,178.749484 132.770187,185.639753 160.861283,185.639753 C183.122154,185.639753 192.662526,180.604556 192.662526,168.67909 C192.662526,161.788821 190.012423,156.753624 155.296065,153.308489 C126.409938,150.393375 108.389235,144.033126 108.389235,120.977226 C108.389235,99.5113875 126.409938,86.7908901 156.621119,86.7908901 C190.542443,86.7908901 207.238095,98.4513472 209.358178,123.89234 C209.358178,124.687371 209.093167,125.482403 208.563147,126.277434 C208.033127,126.807454 207.238095,127.337474 206.443064,127.337474 L192.662526,127.337474 C191.337475,127.337474 190.012423,126.277434 189.747412,124.952382 C186.567289,110.376813 178.351966,105.606625 156.621119,105.606625 C132.240165,105.606625 129.325053,114.086957 129.325053,120.447205 C129.325053,128.132506 132.770187,130.5176 165.631471,134.757766 C198.227744,138.997931 213.598344,145.093169 213.598344,167.884058 C213.333333,191.20497 194.252589,204.455488 160.596274,204.455488 L160.596274,204.455488 Z\"></path>\n    </g>\n</svg>`,\n  // Markdown\n  'markdown': `\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12px\" height=\"12px\" viewBox=\"0 0 208 128\">\n  <style type=\"text/css\">.st0{fill:currentcolor;}</style>\n  <path class=\"st0\" d=\"M30 98V30h20l20 25 20-25h20v68H90V59L70 84 50 59v39zm125 0l-30-33h20V30h20v35h20z\"/>\n  </svg>`,\n  // TypeScript\n  'typescript': `\n    <svg xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 50 50\" width=\"12px\" height=\"12px\">\n    <style type=\"text/css\">.st0{fill:currentcolor;}</style>\n      <path class=\"st0\" d=\"M45,4H5C4.447,4,4,4.448,4,5v40c0,0.552,0.447,1,1,1h40c0.553,0,1-0.448,1-1V5C46,4.448,45.553,4,45,4z M29,26.445h-5V42h-4\\tV26.445h-5V23h14V26.445z M30.121,41.112v-4.158c0,0,2.271,1.712,4.996,1.712c2.725,0,2.62-1.782,2.62-2.026\\tc0-2.586-7.721-2.586-7.721-8.315c0-7.791,11.25-4.717,11.25-4.717l-0.14,3.704c0,0-1.887-1.258-4.018-1.258s-2.9,1.013-2.9,2.096\\tc0,2.795,7.791,2.516,7.791,8.141C42,44.955,30.121,41.112,30.121,41.112z\"/>\n  </svg>`,\n  // CSS\n  'css': `\n  <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n width=\"14px\" height=\"14px\" viewBox=\"0 0 263.000000 136.000000\"\n preserveAspectRatio=\"xMidYMid meet\">\n  <style type=\"text/css\">.st0{fill:currentcolor;}</style>\n<g transform=\"translate(0.000000,136.000000) scale(0.100000,-0.100000)\" stroke=\"none\">\n<path class=\"st0\" d=\"M300 685 l0 -375 305 0 305 0 0 125 0 125 -175 0 -175 0 0 125 0 125\n175 0 175 0 0 125 0 125 -305 0 -305 0 0 -375z\"/>\n<path class=\"st0\" d=\"M1030 815 l0 -245 175 0 c168 0 175 -1 175 -20 0 -19 -7 -20 -175\n-20 l-175 0 0 -115 0 -115 300 0 300 0 0 250 0 250 -175 0 c-168 0 -175 1\n-175 20 0 19 7 20 175 20 l175 0 0 110 0 110 -300 0 -300 0 0 -245z\"/>\n<path class=\"st0\" d=\"M1750 815 l0 -245 175 0 c168 0 175 -1 175 -20 0 -19 -7 -20 -175\n-20 l-175 0 0 -115 0 -115 305 0 305 0 0 250 0 250 -180 0 c-173 0 -180 1\n-180 20 0 19 8 20 178 22 l177 3 3 108 3 107 -306 0 -305 0 0 -245z\"/>\n</g>\n</svg>`,\n  // JSON\n  'json': `\n  <svg class=\"svg-icon\" width=\"12px\" height=\"12px\" style=\"width: 1em;height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M216.4 107.1h50.2c5.7 0 10.4 4.7 10.4 10.4V156c0 5.7-4.7 10.4-10.4 10.4h-45.8c-5.7 0-13.4 4.6-13.4 10.4l-1 246.6c-1.3 35.2-25.1 90-58.6 91.4 23.2-1 59.6 39.5 59.6 89.4l-1 242.4c0 5.8 4.7 19.6 10.6 19.6h49.3c5.9 0 10.8 6.8 10.8 12.8v30.9c0 5.9-4.8 10.8-10.8 10.8h-49.8c-32.4-12.2-60.6-40.7-60.6-90.4v-181c0-49.9-27.1-90.4-60.6-90.4H77.1c-6.8 0-12.2-5.5-12.2-12.2v-65.9c0-6.8 5.5-12.2 12.2-12.2h18.1c33.5 0 60.6-40.5 60.6-90.4V197.4c0-49.9 27.1-90.3 60.6-90.3M808.6 107.1c33.5 0 60.6 40.4 60.6 90.3v180.8c0 49.9 27.1 90.4 60.6 90.4h18.1c6.7 0 12.2 5.4 12.2 12.2v65.9c0 6.7-5.4 12.2-12.2 12.2h-18.2c-33.5 0-60.6 40.5-60.6 90.4v181c0 49.7-28.2 78.2-60.6 90.4h-49.8c-6 0-10.8-4.9-10.8-10.8V879c0-6 4.9-12.8 10.8-12.8H808c5.9 0 10.6-13.8 10.6-19.6l-1-242.4c0-49.9 36.4-90.4 59.6-89.4-33.5-1.4-57.3-56.2-58.6-91.4l-1-246.6c0-5.8-7.7-10.4-13.4-10.4h-45.8c-5.7 0-10.4-4.7-10.4-10.4v-38.5c0-5.7 4.7-10.4 10.4-10.4h50.2M508.4 667.8c16.8 0 30.4 13.6 30.4 30.4 0 16.8-13.6 30.4-30.4 30.4-16.8 0-30.4-13.6-30.4-30.4 0-16.8 13.6-30.4 30.4-30.4M386.8 667.8c16.8 0 30.4 13.6 30.4 30.4 0 16.8-13.6 30.4-30.4 30.4-16.8 0-30.4-13.6-30.4-30.4 0-16.8 13.6-30.4 30.4-30.4M630 667.8c16.8 0 30.4 13.6 30.4 30.4 0 16.8-13.6 30.4-30.4 30.4-16.8 0-30.4-13.6-30.4-30.4 0-16.8 13.6-30.4 30.4-30.4z\"  />\n  </svg>`,\n};\n","// The default EditorOptions for the Monaco editor instance\n// ref: https://microsoft.github.io/monaco-editor/typedoc/interfaces/editor.IEditorOptions.html\nimport * as monaco from \"monaco-editor\";\n\nexport const defaultMonacoOptions: monaco.editor.IStandaloneEditorConstructionOptions = {\n  language: 'twig',\n  theme: 'vs',\n  automaticLayout: true,\n  tabIndex: 0,\n  // Disable sidebar line numbers\n  lineNumbers: 'off',\n  glyphMargin: false,\n  folding: false,\n  // Undocumented see https://github.com/Microsoft/vscode/issues/30795#issuecomment-410998882\n  lineDecorationsWidth: 0,\n  // Disable the current line highlight\n  renderLineHighlight: 'none',\n  wordWrap: 'on',\n  scrollBeyondLastLine: false,\n  scrollbar: {\n    vertical: 'auto',\n    horizontal: 'auto',\n    alwaysConsumeMouseWheel: false,\n    handleMouseWheel: true,\n  },\n  fontSize: 14,\n  fontFamily: 'SFMono-Regular, Consolas, \"Liberation Mono\", Menlo, Courier, monospace',\n  minimap: {\n    enabled: false\n  },\n};\n","/**\n * CodeEditor Craft CMS\n *\n * Provides a code editor field with Twig & Craft API autocomplete\n *\n * @link      https://nystudio107.com\n * @copyright Copyright (c) 2022 nystudio107\n */\n\nimport * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport {editor} from \"monaco-editor/esm/vs/editor/editor.api\";\nimport {TabFocus} from 'monaco-editor/esm/vs/editor/browser/config/tabFocus.js';\nimport {getCompletionItemsFromEndpoint} from './twig-autocomplete';\nimport {languageIcons} from './language-icons'\nimport {defaultMonacoOptions} from \"./default-monaco-options\";\nimport EditorOption = editor.EditorOption;\n\n/**\n * @author    nystudio107\n * @package   CodeEditor\n * @since     1.0.0\n */\n\ndeclare global {\n  let __webpack_public_path__: string;\n  const Craft: Craft;\n\n  interface Window {\n    codeEditorBaseAssetsUrl: string;\n    makeMonacoEditor: MakeMonacoEditorFn;\n    setMonacoEditorLanguage: SetMonacoEditorLanguageFn;\n    setMonacoEditorTheme: SetMonacoEditorThemeFn;\n    monacoEditorInstances: { [key: string]: monaco.editor.IStandaloneCodeEditor };\n  }\n}\n\nconst MAX_EDITOR_ROWS = 50;\n\n// Set the __webpack_public_path__ dynamically, so we can work inside cpresources's hashed dir name\n// https://stackoverflow.com/questions/39879680/example-of-setting-webpack-public-path-at-runtime\nif (typeof __webpack_public_path__ === 'undefined' || __webpack_public_path__ === '') {\n  __webpack_public_path__ = window.codeEditorBaseAssetsUrl;\n}\n\n/**\n * Create a Monaco Editor instance\n *\n * @param {string} elementId - The id of the TextArea or Input element to replace with a Monaco editor\n * @param {string} fieldType - The field's passed in type, used for autocomplete caching\n * @param {monaco.editor.IStandaloneEditorConstructionOptions} monacoOptions - Monaco editor options\n * @param {string} codeEditorOptions - JSON encoded string of arbitrary CodeEditorOptions for the field\n * @param {string} endpointUrl - The controller action endpoint for generating autocomplete items\n */\nfunction makeMonacoEditor(elementId: string, fieldType: string, monacoOptions: string, codeEditorOptions: string, endpointUrl: string): monaco.editor.IStandaloneCodeEditor | undefined {\n  const textArea = <HTMLInputElement | null>document.getElementById(elementId);\n  const container = document.createElement('div');\n  const fieldOptions: CodeEditorOptions = JSON.parse(codeEditorOptions);\n  const placeholderId = elementId + '-monaco-editor-placeholder';\n  // If we can't find the passed in text area or if there is no parent node, return\n  if (textArea === null || textArea.parentNode === null) {\n    return;\n  }\n  // See if the `underline-links` class has already been added to the <body> element\n  const hasUnderlineLinksBodyClass = document.body.classList.contains('underline-links');\n  // Monaco editor options passed in from the config\n  const monacoEditorOptions: monaco.editor.IStandaloneEditorConstructionOptions = JSON.parse(monacoOptions);\n  // Set the scrollbar to hidden in defaultMonacoOptions if this is a single-line field\n  if ('singleLineEditor' in fieldOptions && fieldOptions.singleLineEditor) {\n    defaultMonacoOptions.scrollbar = {\n      vertical: 'hidden',\n      horizontal: 'auto',\n      alwaysConsumeMouseWheel: false,\n      handleMouseWheel: false,\n    };\n  }\n  // Create the model with a unique URI so individual instances can be targeted\n  let modelUri = monaco.Uri.parse('https://craft-code-editor.com/' + elementId);\n  // Assign a default language\n  let monacoEditorLanguage = monacoEditorOptions.language ?? defaultMonacoOptions.language;\n  // If they are passing in the name of the file, use it for the modelUri, and set the language to undefined,\n  // so Monaco can auto-detect the language\n  if ('fileName' in fieldOptions && fieldOptions.fileName) {\n    modelUri = monaco.Uri.file(fieldOptions.fileName);\n    monacoEditorLanguage = undefined;\n  }\n  monaco.editor.getModel(modelUri)?.dispose();\n  const textModel = monaco.editor.createModel(textArea.value, monacoEditorLanguage, modelUri);\n  defaultMonacoOptions.model = textModel;\n  // Set the editor theme here, so we don't re-apply it later\n  monacoEditorOptions.theme = getEditorTheme(monacoEditorOptions?.theme);\n  // Monaco editor defaults, coalesced together\n  const options: monaco.editor.IStandaloneEditorConstructionOptions = {...defaultMonacoOptions, ...monacoEditorOptions}\n  // Make a sibling div for the Monaco editor to live in\n  container.id = elementId + '-monaco-editor';\n  container.classList.add('monaco-editor', 'craft-code-editor-relative', 'craft-code-editor-box-content', 'monaco-editor-codefield', 'craft-code-editor-h-full');\n  // Apply any passed in classes to the wrapper div\n  const wrapperClass = fieldOptions.wrapperClass ?? '';\n  if (wrapperClass !== '') {\n    const cl = container.classList;\n    const classArray = wrapperClass.trim().split(/\\s+/);\n    cl.add(...classArray);\n  }\n  // Create an empty div for the icon\n  const displayLanguageIcon = fieldOptions.displayLanguageIcon ?? true;\n  if (displayLanguageIcon) {\n    const icon = document.createElement('div');\n    icon.id = elementId + '-monaco-language-icon';\n    container.appendChild(icon);\n  }\n  // Handle the placeholder text (if any)\n  const placeholderText = fieldOptions.placeholderText ?? '';\n  if (placeholderText !== '') {\n    const placeholder = document.createElement('div');\n    placeholder.id = elementId + '-monaco-editor-placeholder';\n    placeholder.innerHTML = placeholderText;\n    placeholder.classList.add('monaco-placeholder', 'craft-code-editor-p-2');\n    container.appendChild(placeholder);\n  }\n  textArea.parentNode.insertBefore(container, textArea);\n  textArea.style.display = 'none';\n  // Create the Monaco editor\n  const editor = monaco.editor.create(container, options);\n  // Make the monaco editor instances available via the monacoEditorInstances global, since Twig macros can't return a value\n  if (typeof window.monacoEditorInstances === 'undefined') {\n    window.monacoEditorInstances = {};\n  }\n  window.monacoEditorInstances[elementId] = editor;\n  // When the text is changed in the editor, sync it to the underlying TextArea input\n  editor.onDidChangeModelContent(() => {\n    textArea.value = editor.getValue();\n  });\n  // Add the language icon (if any)\n  setMonacoEditorLanguage(editor, options.language, elementId);\n  // ref: https://github.com/vikyd/vue-monaco-singleline/blob/master/src/monaco-singleline.vue#L150\n  if ('singleLineEditor' in fieldOptions && fieldOptions.singleLineEditor) {\n    if (textModel !== null) {\n      // Remove multiple spaces & tabs\n      const text = textModel.getValue();\n      textModel.setValue(text.replace(/\\s\\s+/g, ' '));\n      // Handle the Find command\n      editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyF, () => {\n      });\n      // Handle typing the Enter key\n      editor.addCommand(monaco.KeyCode.Enter, () => {\n      }, '!suggestWidgetVisible');\n      // Enable TabFocusMode ref: https://stackoverflow.com/questions/74202202/how-to-programatically-set-tabfocusmode-in-monaco-editor/74598917\n      editor.onDidFocusEditorWidget(() => {\n        TabFocus.setTabFocusMode(true);\n      });\n      // Handle Paste\n      editor.onDidPaste(() => {\n        // multiple rows will be merged to single row\n        let newContent = '';\n        const lineCount = textModel.getLineCount();\n        // remove all line breaks\n        for (let i = 0; i < lineCount; i += 1) {\n          newContent += textModel.getLineContent(i + 1);\n        }\n        // Remove multiple spaces & tabs\n        newContent = newContent.replace(/\\s\\s+/g, ' ');\n        textModel.setValue(newContent);\n        editor.setPosition({column: newContent.length + 1, lineNumber: 1});\n      })\n    }\n  }\n  // Get the autocompletion items if the language is Twig\n  if (options.language === 'twig') {\n    getCompletionItemsFromEndpoint(fieldType, codeEditorOptions, endpointUrl);\n  }\n  // Custom resizer to always keep the editor full-height, without needing to scroll\n  let ignoreEvent = false;\n  const updateHeight = () => {\n    const width = editor.getLayoutInfo().width;\n    const lineHeight = editor.getOption(EditorOption.lineHeight);\n    const maxEditorRows = fieldOptions.maxEditorRows ?? MAX_EDITOR_ROWS;\n    let contentHeight = editor.getContentHeight();\n    if (maxEditorRows !== 0) {\n      contentHeight = Math.min(lineHeight * maxEditorRows, editor.getContentHeight());\n    }\n    if (textArea instanceof HTMLTextAreaElement) {\n      contentHeight = Math.max(textArea.rows * lineHeight, contentHeight)\n    }\n    //container.style.width = `${width}px`;\n    container.style.height = `${contentHeight}px`;\n    try {\n      ignoreEvent = true;\n      editor.layout({width, height: contentHeight});\n    } finally {\n      ignoreEvent = false;\n    }\n  };\n  // Handle fixed height editors\n  let dynamicHeight = true;\n  if ('fixedHeightEditor' in fieldOptions && fieldOptions.fixedHeightEditor) {\n    dynamicHeight = false;\n  }\n  if (dynamicHeight) {\n    editor.onDidContentSizeChange(updateHeight);\n    updateHeight();\n  }\n  // Handle the placeholder\n  if (placeholderText !== '') {\n    showPlaceholder('#' + placeholderId, editor.getValue());\n    editor.onDidBlurEditorWidget(() => {\n      showPlaceholder('#' + placeholderId, editor.getValue());\n    });\n    editor.onDidFocusEditorWidget(() => {\n      hidePlaceholder('#' + placeholderId);\n    });\n  }\n\n  /**\n   * Show the placeholder text\n   *\n   * @param {string} selector - The selector for the placeholder element\n   * @param {string} value - The editor field's value (the text)\n   */\n  function showPlaceholder(selector: string, value: string): void {\n    if (value === \"\") {\n      const elem = <HTMLElement | null>document.querySelector(selector);\n      if (elem !== null) {\n        elem.style.display = \"initial\";\n      }\n    }\n  }\n\n  /**\n   * Hide the placeholder text\n   *\n   * @param {string} selector - The selector for the placeholder element\n   */\n  function hidePlaceholder(selector: string): void {\n    const elem = <HTMLElement | null>document.querySelector(selector);\n    if (elem !== null) {\n      elem.style.display = \"none\";\n    }\n  }\n\n  // Unless the class `underline-links` was already in the <body> tag, remove it because the Monaco\n  // editor added it during initialization, and there doesn't appear to be a way to configure the\n  // `accessibility.underlineLinks` setting via IEditorOptions\n  // ref: https://github.com/nystudio107/craft-code-editor/issues/16\n  document.body.classList.toggle('underline-links', hasUnderlineLinksBodyClass);\n\n  return editor;\n}\n\n/**\n * Set the language for the Monaco editor instance\n *\n * @param {monaco.editor.IStandaloneCodeEditor} editor - the Monaco editor instance\n * @param {string | undefined} language - the editor language\n * @param {string} elementId - the element id used to create the monaco editor from\n */\nfunction setMonacoEditorLanguage(editor: monaco.editor.IStandaloneCodeEditor, language: string | undefined, elementId: string): void {\n  const containerId = elementId + '-monaco-editor';\n  const iconId = elementId + '-monaco-language-icon';\n  const container = <Element | null>document.querySelector('#' + containerId);\n  if (container !== null) {\n    if (typeof language !== \"undefined\") {\n      const languageIcon = languageIcons[language] ?? languageIcons['default'] ?? null;\n      const icon = document.createElement('div');\n      monaco.editor.setModelLanguage(editor.getModel()!, language);\n      icon.id = iconId;\n      // Only add in the icon if one is available\n      if (languageIcon !== null) {\n        let message = 'code is supported.';\n        if (window.hasOwnProperty('Craft')) {\n          message = Craft.t('codeeditor', message);\n        }\n        const languageTitle = language.charAt(0).toUpperCase() + language.slice(1) + ' ' + message;\n        icon.classList.add('monaco-editor-codefield--icon');\n        icon.setAttribute('title', languageTitle);\n        icon.setAttribute('aria-hidden', 'true');\n        icon.innerHTML = languageIcon;\n      }\n      // Replace the icon div\n      const currentIcon = container.querySelector('#' + iconId);\n      if (currentIcon) {\n        container.replaceChild(icon, currentIcon);\n      }\n    }\n  }\n}\n\n/**\n * Return the editor theme to use, accounting for undefined and 'auto' as potential parameters\n *\n * @param {string | undefined} theme - the editor theme\n */\nfunction getEditorTheme(theme: string | undefined): string {\n  let editorTheme = theme ?? 'vs';\n  if (editorTheme === 'auto') {\n    const mediaQueryObj = window.matchMedia('(prefers-color-scheme: dark)');\n    editorTheme = mediaQueryObj.matches ? 'vs-dark' : 'vs';\n  }\n\n  return editorTheme;\n}\n\n/**\n * Set the theme for the Monaco editor instance\n *\n * @param {monaco.editor.IStandaloneCodeEditor} editor - the Monaco editor instance\n * @param {string | undefined} theme - the editor theme\n */\nfunction setMonacoEditorTheme(editor: monaco.editor.IStandaloneCodeEditor, theme: string | undefined): void {\n  const editorTheme = getEditorTheme(theme);\n  // @ts-ignore\n  const currentTheme = editor._themeService?._theme?.themeName ?? null;\n  if (currentTheme !== editorTheme) {\n    editor.updateOptions({theme: editorTheme});\n  }\n}\n\n// Make the functions globally available\n// For whatever reason, setting `globalAPI: true` in the config no longer exposes the global `monaco` object,\n// so we just do it ourselves manually here for now\n// @ts-ignore\nwindow.monaco = monaco;\nwindow.makeMonacoEditor = makeMonacoEditor;\nwindow.setMonacoEditorLanguage = setMonacoEditorLanguage;\nwindow.setMonacoEditorTheme = setMonacoEditorTheme;\n\nexport {makeMonacoEditor, setMonacoEditorLanguage, setMonacoEditorTheme};\n","var map = {\n\t\"./editorBaseApi\": [\n\t\t3059\n\t],\n\t\"./editorBaseApi.js\": [\n\t\t3059\n\t],\n\t\"./editorSimpleWorker\": [\n\t\t735\n\t],\n\t\"./editorSimpleWorker.js\": [\n\t\t735\n\t],\n\t\"./editorWorker\": [\n\t\t304\n\t],\n\t\"./editorWorker.js\": [\n\t\t304\n\t],\n\t\"./editorWorkerHost\": [\n\t\t6358\n\t],\n\t\"./editorWorkerHost.js\": [\n\t\t6358\n\t],\n\t\"./findSectionHeaders\": [\n\t\t9307\n\t],\n\t\"./findSectionHeaders.js\": [\n\t\t9307\n\t],\n\t\"./getIconClasses\": [\n\t\t8148\n\t],\n\t\"./getIconClasses.js\": [\n\t\t8148\n\t],\n\t\"./languageFeatureDebounce\": [\n\t\t2060\n\t],\n\t\"./languageFeatureDebounce.js\": [\n\t\t2060\n\t],\n\t\"./languageFeatures\": [\n\t\t2230\n\t],\n\t\"./languageFeatures.js\": [\n\t\t2230\n\t],\n\t\"./languageFeaturesService\": [\n\t\t1197\n\t],\n\t\"./languageFeaturesService.js\": [\n\t\t1197\n\t],\n\t\"./languageService\": [\n\t\t3930\n\t],\n\t\"./languageService.js\": [\n\t\t3930\n\t],\n\t\"./languagesAssociations\": [\n\t\t5996\n\t],\n\t\"./languagesAssociations.js\": [\n\t\t5996\n\t],\n\t\"./languagesRegistry\": [\n\t\t6995\n\t],\n\t\"./languagesRegistry.js\": [\n\t\t6995\n\t],\n\t\"./markerDecorations\": [\n\t\t886\n\t],\n\t\"./markerDecorations.js\": [\n\t\t886\n\t],\n\t\"./markerDecorationsService\": [\n\t\t11\n\t],\n\t\"./markerDecorationsService.js\": [\n\t\t11\n\t],\n\t\"./model\": [\n\t\t4830\n\t],\n\t\"./model.js\": [\n\t\t4830\n\t],\n\t\"./modelService\": [\n\t\t931\n\t],\n\t\"./modelService.js\": [\n\t\t931\n\t],\n\t\"./resolverService\": [\n\t\t7042\n\t],\n\t\"./resolverService.js\": [\n\t\t7042\n\t],\n\t\"./semanticTokensDto\": [\n\t\t9376\n\t],\n\t\"./semanticTokensDto.js\": [\n\t\t9376\n\t],\n\t\"./semanticTokensProviderStyling\": [\n\t\t9520\n\t],\n\t\"./semanticTokensProviderStyling.js\": [\n\t\t9520\n\t],\n\t\"./semanticTokensStyling\": [\n\t\t2891\n\t],\n\t\"./semanticTokensStyling.js\": [\n\t\t2891\n\t],\n\t\"./semanticTokensStylingService\": [\n\t\t5767\n\t],\n\t\"./semanticTokensStylingService.js\": [\n\t\t5767\n\t],\n\t\"./textModelSync/textModelSync.impl\": [\n\t\t5456\n\t],\n\t\"./textModelSync/textModelSync.impl.js\": [\n\t\t5456\n\t],\n\t\"./textModelSync/textModelSync.protocol\": [\n\t\t5628,\n\t\t96\n\t],\n\t\"./textModelSync/textModelSync.protocol.js\": [\n\t\t5628,\n\t\t96\n\t],\n\t\"./textResourceConfiguration\": [\n\t\t1504\n\t],\n\t\"./textResourceConfiguration.js\": [\n\t\t1504\n\t],\n\t\"./treeSitterParserService\": [\n\t\t5320\n\t],\n\t\"./treeSitterParserService.js\": [\n\t\t5320\n\t],\n\t\"./treeViewsDnd\": [\n\t\t2603\n\t],\n\t\"./treeViewsDnd.js\": [\n\t\t2603\n\t],\n\t\"./treeViewsDndService\": [\n\t\t6756\n\t],\n\t\"./treeViewsDndService.js\": [\n\t\t6756\n\t],\n\t\"./unicodeTextModelHighlighter\": [\n\t\t9887\n\t],\n\t\"./unicodeTextModelHighlighter.js\": [\n\t\t9887\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorBaseApi\": [\n\t\t3059\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorBaseApi.js\": [\n\t\t3059\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorSimpleWorker\": [\n\t\t735\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorSimpleWorker.js\": [\n\t\t735\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorWorker\": [\n\t\t304\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorWorker.js\": [\n\t\t304\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorWorkerHost\": [\n\t\t6358\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/editorWorkerHost.js\": [\n\t\t6358\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/findSectionHeaders\": [\n\t\t9307\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/findSectionHeaders.js\": [\n\t\t9307\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/getIconClasses\": [\n\t\t8148\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/getIconClasses.js\": [\n\t\t8148\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce\": [\n\t\t2060\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeatureDebounce.js\": [\n\t\t2060\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeatures\": [\n\t\t2230\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeatures.js\": [\n\t\t2230\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeaturesService\": [\n\t\t1197\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageFeaturesService.js\": [\n\t\t1197\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageService\": [\n\t\t3930\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languageService.js\": [\n\t\t3930\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languagesAssociations\": [\n\t\t5996\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languagesAssociations.js\": [\n\t\t5996\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languagesRegistry\": [\n\t\t6995\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/languagesRegistry.js\": [\n\t\t6995\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/markerDecorations\": [\n\t\t886\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/markerDecorations.js\": [\n\t\t886\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/markerDecorationsService\": [\n\t\t11\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/markerDecorationsService.js\": [\n\t\t11\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/model\": [\n\t\t4830\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/model.js\": [\n\t\t4830\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/modelService\": [\n\t\t931\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/modelService.js\": [\n\t\t931\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/resolverService\": [\n\t\t7042\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/resolverService.js\": [\n\t\t7042\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensDto\": [\n\t\t9376\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensDto.js\": [\n\t\t9376\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling\": [\n\t\t9520\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensProviderStyling.js\": [\n\t\t9520\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensStyling\": [\n\t\t2891\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensStyling.js\": [\n\t\t2891\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService\": [\n\t\t5767\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/semanticTokensStylingService.js\": [\n\t\t5767\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl\": [\n\t\t5456\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.impl.js\": [\n\t\t5456\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.protocol\": [\n\t\t5628,\n\t\t96\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textModelSync/textModelSync.protocol.js\": [\n\t\t5628,\n\t\t96\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textResourceConfiguration\": [\n\t\t1504\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/textResourceConfiguration.js\": [\n\t\t1504\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeSitterParserService\": [\n\t\t5320\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeSitterParserService.js\": [\n\t\t5320\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeViewsDnd\": [\n\t\t2603\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeViewsDnd.js\": [\n\t\t2603\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeViewsDndService\": [\n\t\t6756\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/treeViewsDndService.js\": [\n\t\t6756\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter\": [\n\t\t9887\n\t],\n\t\"monaco-editor/esm/vs/editor/common/services/unicodeTextModelHighlighter.js\": [\n\t\t9887\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 9204;\nmodule.exports = webpackAsyncContext;"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","keys","Object","id","module","exports","COMPLETION_KEY","getLastItem","arr","length","addCompletionItemsToMonaco","completionItems","autocompleteType","hasSubProperties","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","model","position","token","result","currentItems","currentLine","getValueInRange","startLineNumber","lineNumber","startColumn","endLineNumber","endColumn","column","inTwigExpression","lastIndexOf","substring","indexOf","currentWords","replace","split","currentWord","includes","isSubProperty","charAt","parents","i","hasOwnProperty","suggestions","item","startsWith","completionItem","range","documentation","docs","value","isTrusted","supportsHtml","push","addHoverHandlerToMonaco","registerHoverProvider","provideHover","getLineMaxColumn","getWordAtPosition","searchLine","thisParent","word","contents","detail","languageIcons","defaultMonacoOptions","language","theme","automaticLayout","tabIndex","lineNumbers","glyphMargin","folding","lineDecorationsWidth","renderLineHighlight","wordWrap","scrollBeyondLastLine","scrollbar","vertical","horizontal","alwaysConsumeMouseWheel","handleMouseWheel","fontSize","fontFamily","minimap","enabled","EditorOption","editor","setMonacoEditorLanguage","elementId","containerId","iconId","container","document","querySelector","languageIcon","icon","createElement","setModelLanguage","getModel","message","window","Craft","t","languageTitle","toUpperCase","slice","classList","add","setAttribute","innerHTML","currentIcon","replaceChild","getEditorTheme","editorTheme","matchMedia","matches","codeEditorBaseAssetsUrl","monaco","makeMonacoEditor","fieldType","monacoOptions","codeEditorOptions","endpointUrl","textArea","getElementById","fieldOptions","JSON","parse","placeholderId","parentNode","hasUnderlineLinksBodyClass","body","contains","monacoEditorOptions","singleLineEditor","modelUri","monacoEditorLanguage","fileName","file","undefined","dispose","textModel","createModel","options","wrapperClass","cl","classArray","trim","displayLanguageIcon","appendChild","placeholderText","placeholder","insertBefore","style","display","create","monacoEditorInstances","onDidChangeModelContent","getValue","text","setValue","addCommand","CtrlCmd","KeyF","Enter","onDidFocusEditorWidget","setTabFocusMode","onDidPaste","newContent","lineCount","getLineCount","getLineContent","setPosition","searchParams","URLSearchParams","set","glueChar","codeEditorFieldTypes","request","XMLHttpRequest","open","toString","onload","status","responseText","monacoAutocompleteItems","name","autocomplete","entries","__completions","type","console","log","send","getCompletionItemsFromEndpoint","ignoreEvent","updateHeight","width","getLayoutInfo","lineHeight","getOption","maxEditorRows","contentHeight","getContentHeight","Math","min","HTMLTextAreaElement","max","rows","height","layout","dynamicHeight","showPlaceholder","selector","elem","fixedHeightEditor","onDidContentSizeChange","onDidBlurEditorWidget","hidePlaceholder","toggle","setMonacoEditorTheme","_themeService","_theme","themeName","updateOptions","ids","all"],"sourceRoot":""}