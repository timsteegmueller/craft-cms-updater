{"version":3,"file":"MatrixInput.js","mappings":"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","sources":["webpack:///./MatrixInput.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  /**\n   * Matrix input class\n   */\n  Craft.MatrixInput = Garnish.Base.extend(\n    {\n      id: null,\n      entryTypes: null,\n      entryTypesByHandle: null,\n      inputNamePrefix: null,\n      inputIdPrefix: null,\n\n      showingAddEntryMenu: false,\n      addEntryBtnGroupWidth: null,\n      addEntryBtnContainerWidth: null,\n\n      $container: null,\n      $form: null,\n      $entriesContainer: null,\n      $addEntryBtnContainer: null,\n      $addEntryBtn: null,\n      $addEntryMenuBtn: null,\n      $pasteBtn: null,\n      $statusMessage: null,\n\n      entrySort: null,\n      entrySelect: null,\n\n      /**\n       * @type {Craft.ElementEditor|null}\n       */\n      elementEditor: null,\n\n      addingEntry: false,\n\n      init: function (id, entryTypes, inputNamePrefix, settings) {\n        this.id = id;\n        this.entryTypes = entryTypes;\n        this.inputNamePrefix = inputNamePrefix;\n        this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n        // see if settings was actually set to the maxEntries value\n        if (typeof settings === 'number') {\n          settings = {maxEntries: settings};\n        }\n        this.setSettings(settings, Craft.MatrixInput.defaults);\n\n        this.$container = $('#' + this.id);\n        this.$form = this.$container.closest('form');\n        this.$entriesContainer = this.$container.children('.blocks');\n        this.$addEntryBtnContainer = this.$container.children('.buttons');\n        this.$addEntryBtn =\n          this.$addEntryBtnContainer.children('.btn:not(.menubtn)');\n        this.$addEntryMenuBtn = this.$addEntryBtnContainer.children('.menubtn');\n        this.$statusMessage = this.$container.find('[data-status-message]');\n\n        this.$container.data('matrix', this);\n\n        this.entryTypesByHandle = {};\n\n        for (let i = 0; i < this.entryTypes.length; i++) {\n          const entryType = this.entryTypes[i];\n          this.entryTypesByHandle[entryType.handle] = entryType;\n        }\n\n        const $entries = this.$entriesContainer.children('.matrixblock');\n        const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n\n        this.entrySort = new Garnish.DragSort($entries, {\n          handle: '> .actions > .move-btn',\n          ignoreHandleSelector: null,\n          axis: 'y',\n          filter: () => {\n            // Only return all the selected items if the target item is selected\n            if (this.entrySort.$targetItem.hasClass('sel')) {\n              return this.entrySelect.getSelectedItems();\n            } else {\n              return this.entrySort.$targetItem;\n            }\n          },\n          collapseDraggees: true,\n          magnetStrength: 4,\n          helperLagBase: 1.5,\n          helperOpacity: 0.9,\n          onDragStop: () => {\n            this.trigger('entrySortDragStop');\n          },\n          onSortChange: () => {\n            this.entrySelect.resetItemOrder();\n          },\n        });\n\n        this.entrySelect = new Garnish.Select(\n          this.$entriesContainer,\n          $entries,\n          {\n            multi: true,\n            vertical: true,\n            handle: '> .actions > .checkbox, > .titlebar',\n            filter: (target) => {\n              return !$(target).closest('.tab-label').length;\n            },\n            checkboxMode: true,\n          }\n        );\n\n        for (let i = 0; i < $entries.length; i++) {\n          const $entry = $($entries[i]);\n          const entry = new Craft.MatrixInput.Entry(this, $entry);\n\n          if (entry.id && $.inArray('' + entry.id, collapsedEntries) !== -1) {\n            entry.collapse();\n          }\n        }\n\n        this.addListener(this.$addEntryBtn, 'activate', async function () {\n          if (this.$addEntryBtn.hasClass('loading')) {\n            return;\n          }\n          this.$addEntryBtn.addClass('loading');\n          Craft.cp.announce(Craft.t('app', 'Loading'));\n          try {\n            await this.addEntry(this.$addEntryBtn.data('type'));\n          } finally {\n            this.$addEntryBtn.removeClass('loading');\n          }\n        });\n\n        if (this.$addEntryMenuBtn.length) {\n          this.$addEntryMenuBtn\n            .disclosureMenu()\n            .data('disclosureMenu')\n            .$container.find('button')\n            .on('activate', async (ev) => {\n              this.$addEntryMenuBtn.addClass('loading');\n              Craft.cp.announce(Craft.t('app', 'Loading'));\n              try {\n                await this.addEntry($(ev.currentTarget).data('type'));\n              } finally {\n                this.$addEntryMenuBtn.removeClass('loading');\n              }\n            });\n        }\n\n        this.updateAddEntryBtn();\n\n        setTimeout(() => {\n          this.elementEditor = this.$container\n            .closest('form')\n            .data('elementEditor');\n\n          if (this.elementEditor) {\n            this.elementEditor.on('update', () => {\n              this.settings.ownerId = this.elementEditor.getDraftElementId(\n                this.settings.ownerId\n              );\n            });\n          }\n\n          this.trigger('afterInit');\n        }, 100);\n\n        // If this field is nested within something that's deletable, be ready to handle that\n        this.$container.closest('.js-deletable').on('delete', (ev) => {\n          // Ignore delete events that came from nested elements\n          if (ev.target === ev.currentTarget) {\n            this.destroy();\n          }\n        });\n\n        Craft.cp.onCopyElements((elementInfo, buttonLabel) => {\n          this.updatePasteBtn(elementInfo);\n          if (this.$pasteBtn && buttonLabel) {\n            this.$pasteBtn.find('.label').text(buttonLabel);\n          }\n        });\n      },\n\n      canAddMoreEntries: function (num = 1) {\n        if (num === 0) {\n          return false;\n        }\n\n        return (\n          !this.maxEntries ||\n          this.$entriesContainer.children().length + num <= this.maxEntries\n        );\n      },\n\n      canPaste(elementInfo) {\n        if (!this.canAddMoreEntries(elementInfo.length)) {\n          return false;\n        }\n\n        for (const e of elementInfo) {\n          if (e.type !== 'craft\\\\elements\\\\Entry') {\n            return false;\n          }\n        }\n\n        const entryTypeIds = this.entryTypes.map((entryType) => entryType.id);\n        for (const info of elementInfo) {\n          if (!entryTypeIds.includes(info.data.entryTypeId)) {\n            return false;\n          }\n        }\n\n        return true;\n      },\n\n      async pasteEntries() {\n        Craft.cp.announce(Craft.t('app', 'Loading'));\n        this.$pasteBtn.addClass('loading');\n\n        try {\n          if (this.elementEditor) {\n            // First ensure we're working with drafts for all elements leading up\n            // to this field’s element\n            await this.elementEditor.setFormValue(\n              this.settings.baseInputName,\n              '*'\n            );\n          }\n\n          const newElementInfo = await Craft.cp.pasteElements({\n            primaryOwnerId: this.settings.ownerId,\n            ownerId: this.settings.ownerId,\n            fieldId: this.settings.fieldId,\n            siteId: this.settings.siteId,\n          });\n\n          if (!newElementInfo.length) {\n            return;\n          }\n\n          let data;\n          try {\n            const response = await Craft.sendActionRequest(\n              'POST',\n              'matrix/render-blocks',\n              {\n                data: {\n                  entryIds: newElementInfo.map((info) => info.id),\n                  siteId: this.settings.siteId,\n                  namespace: this.settings.namespace,\n                },\n              }\n            );\n            data = response.data;\n          } catch (e) {\n            Craft.cp.displayError(e?.response?.data?.message);\n            return;\n          }\n\n          // Pause the element editor\n          await this.elementEditor?.pause();\n\n          const $newEntries = $(data.blockHtml);\n          this.$entriesContainer.append($newEntries);\n          await Craft.appendHeadHtml(data.headHtml);\n          await Craft.appendBodyHtml(data.bodyHtml);\n          Craft.initUiElements($newEntries);\n\n          $newEntries.each((i, entry) => {\n            const $entry = $(entry);\n            new Craft.MatrixInput.Entry(this, $entry);\n            this.trigger('entryAdded', {\n              $entry,\n            });\n          });\n\n          this.entrySort.addItems($newEntries);\n          this.entrySelect.addItems($newEntries);\n          this.updateAddEntryBtn();\n          Garnish.firstFocusableElement($newEntries).focus();\n        } finally {\n          this.$pasteBtn.removeClass('loading');\n        }\n\n        // Resume the element editor\n        this.elementEditor?.resume();\n      },\n\n      updateAddEntryBtn: function () {\n        if (this.canAddMoreEntries()) {\n          this.$addEntryBtn.removeClass('disabled').removeAttr('aria-disabled');\n          this.$addEntryMenuBtn.removeClass('disabled');\n        } else {\n          this.$addEntryBtn.addClass('disabled').attr('aria-disabled', 'true');\n          this.$addEntryMenuBtn.addClass('disabled');\n        }\n\n        this.updatePasteBtn();\n      },\n\n      updatePasteBtn: function (elementInfo = null) {\n        elementInfo = elementInfo || Craft.cp.getCopiedElements();\n        if (this.canPaste(elementInfo)) {\n          if (!this.$pasteBtn) {\n            this.$pasteBtn = Craft.ui\n              .createPasteButton()\n              .appendTo(this.$addEntryBtnContainer);\n            this.addListener(this.$pasteBtn, 'activate', 'pasteEntries');\n          } else {\n            this.$pasteBtn.removeClass('hidden');\n          }\n        } else {\n          this.$pasteBtn?.addClass('hidden');\n        }\n      },\n\n      updateStatusMessage: function () {\n        this.$statusMessage.empty();\n        let message;\n\n        if (!this.canAddMoreEntries()) {\n          message = Craft.t(\n            'app',\n            'Entry could not be added. Maximum number of entries reached.'\n          );\n        }\n\n        setTimeout(() => {\n          this.$statusMessage.text(message);\n        }, 250);\n      },\n\n      async addEntry(type, $insertBefore, autofocus = true, params = {}) {\n        if (!this.canAddMoreEntries()) {\n          this.updateStatusMessage();\n          return;\n        }\n\n        if (this.elementEditor) {\n          // First ensure we're working with drafts for all elements leading up\n          // to this field’s element\n          await this.elementEditor.setFormValue(\n            this.settings.baseInputName,\n            '*'\n          );\n        }\n\n        await Craft.queue.push(async () => {\n          if (this.addingEntry) {\n            // only one new entry at a time\n            return;\n          }\n\n          this.addingEntry = true;\n\n          const {data} = await Craft.sendActionRequest(\n            'POST',\n            'matrix/create-entry',\n            {\n              data: Object.assign(\n                {\n                  fieldId: this.settings.fieldId,\n                  entryTypeId: this.entryTypesByHandle[type].id,\n                  ownerId: this.settings.ownerId,\n                  ownerElementType: this.settings.ownerElementType,\n                  siteId: this.settings.siteId,\n                  namespace: this.settings.namespace,\n                  staticEntries: this.settings.staticEntries,\n                },\n                params\n              ),\n            }\n          );\n\n          const $entry = $(data.blockHtml);\n\n          // Pause the element editor\n          await this.elementEditor?.pause();\n\n          if ($insertBefore?.length) {\n            $entry.insertBefore($insertBefore);\n          } else {\n            $entry.appendTo(this.$entriesContainer);\n          }\n\n          this.trigger('entryAdded', {\n            $entry: $entry,\n          });\n\n          // Animate the entry into position\n          $entry.css(this.getHiddenEntryCss($entry)).velocity(\n            {\n              opacity: 1,\n              'margin-bottom': 8,\n            },\n            'fast',\n            async () => {\n              $entry.css('margin-bottom', '');\n              // Execute the response JS first so any Selectize inputs, etc.,\n              // get instantiated before field toggles\n              await Craft.appendHeadHtml(data.headHtml);\n              await Craft.appendBodyHtml(data.bodyHtml);\n              Craft.initUiElements($entry.children('.fields'));\n              new Craft.MatrixInput.Entry(this, $entry);\n              this.entrySort.addItems($entry);\n              this.entrySelect.addItems($entry);\n              this.updateAddEntryBtn();\n\n              Garnish.requestAnimationFrame(() => {\n                if (autofocus) {\n                  // Scroll to the entry\n                  Garnish.scrollContainerToElement($entry);\n                  // Focus on the first focusable element\n                  $entry\n                    .find('.flex-fields :focusable')\n                    .not('.prevent-autofocus')\n                    .first()\n                    .focus();\n                }\n\n                // Resume the element editor\n                this.elementEditor?.resume();\n              });\n            }\n          );\n\n          this.addingEntry = false;\n        });\n      },\n\n      getEntryTypeByHandle: function (handle) {\n        for (let i = 0; i < this.entryTypes.length; i++) {\n          if (this.entryTypes[i].handle === handle) {\n            return this.entryTypes[i];\n          }\n        }\n      },\n\n      collapseSelectedEntries: function () {\n        this.callOnSelectedEntries('collapse');\n      },\n\n      expandSelectedEntries: function () {\n        this.callOnSelectedEntries('expand');\n      },\n\n      disableSelectedEntries: function () {\n        this.callOnSelectedEntries('disable');\n      },\n\n      enableSelectedEntries: function () {\n        this.callOnSelectedEntries('enable');\n      },\n\n      deleteSelectedEntries: function () {\n        this.callOnSelectedEntries('selfDestruct');\n      },\n\n      duplicateSelectedEntries: function () {\n        this.callOnSelectedEntries('duplicate');\n      },\n\n      callOnSelectedEntries: function (fn) {\n        for (let i = 0; i < this.entrySelect.$selectedItems.length; i++) {\n          this.entrySelect.$selectedItems.eq(i).data('entry')[fn]();\n        }\n      },\n\n      getHiddenEntryCss: function ($entry) {\n        return {\n          opacity: 0,\n          marginBottom: -$entry.outerHeight(),\n        };\n      },\n\n      get maxEntries() {\n        return this.settings.maxEntries;\n      },\n\n      destroy: function () {\n        this.entrySort?.destroy();\n        this.entrySelect?.destroy();\n        delete this.entrySort;\n        delete this.entrySelect;\n\n        this.$entriesContainer.children('.matrixblock').each((i, container) => {\n          $(container).data('entry')?.destroy();\n        });\n\n        this.base();\n      },\n    },\n    {\n      defaults: {\n        fieldId: null,\n        maxEntries: null,\n        namespace: null,\n        baseInputName: null,\n        ownerElementType: null,\n        ownerId: null,\n        siteId: null,\n        staticEntries: false,\n      },\n\n      collapsedEntryStorageKey:\n        'Craft-' + Craft.systemUid + '.MatrixInput.collapsedEntries',\n\n      getCollapsedEntryIds: function () {\n        if (\n          typeof localStorage[Craft.MatrixInput.collapsedEntryStorageKey] ===\n          'string'\n        ) {\n          return Craft.filterArray(\n            localStorage[Craft.MatrixInput.collapsedEntryStorageKey].split(',')\n          );\n        } else {\n          return [];\n        }\n      },\n\n      setCollapsedEntryIds: function (ids) {\n        localStorage[Craft.MatrixInput.collapsedEntryStorageKey] =\n          ids.join(',');\n      },\n\n      rememberCollapsedEntryId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n\n          if ($.inArray('' + id, collapsedEntries) === -1) {\n            collapsedEntries.push(id);\n            Craft.MatrixInput.setCollapsedEntryIds(collapsedEntries);\n          }\n        }\n      },\n\n      forgetCollapsedEntryId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n          const collapsedEntriesIndex = $.inArray('' + id, collapsedEntries);\n\n          if (collapsedEntriesIndex !== -1) {\n            collapsedEntries.splice(collapsedEntriesIndex, 1);\n            Craft.MatrixInput.setCollapsedEntryIds(collapsedEntries);\n          }\n        }\n      },\n\n      initTabs(container) {\n        const $tabs = $(container).children('.pane-tabs');\n        if (!$tabs.length) {\n          return;\n        }\n\n        // init tab manager\n        let tabManager = new Craft.Tabs($tabs);\n\n        // prevent items in the disclosure menu from changing the URL\n        let disclosureMenu = tabManager.$menuBtn.data('trigger');\n        $(disclosureMenu.$container)\n          .find('li, a')\n          .on('click', function (ev) {\n            ev.preventDefault();\n          });\n\n        tabManager.on('selectTab', (ev) => {\n          const href = ev.$tab.attr('href');\n\n          // Show its content area\n          if (href && href.charAt(0) === '#') {\n            $(href).removeClass('hidden');\n          }\n\n          // Trigger a resize event to update any UI components that are listening for it\n          Garnish.$win.trigger('resize');\n\n          // Fixes Redactor fixed toolbars on previously hidden panes\n          Garnish.$doc.trigger('scroll');\n        });\n\n        tabManager.on('deselectTab', (ev) => {\n          const href = ev.$tab.attr('href');\n          if (href && href.charAt(0) === '#') {\n            // Hide its content area\n            $(ev.$tab.attr('href')).addClass('hidden');\n          }\n        });\n\n        return tabManager;\n      },\n    }\n  );\n\n  Craft.MatrixInput.Entry = Garnish.Base.extend({\n    /**\n     * @type {Craft.MatrixInput}\n     */\n    matrix: null,\n    $container: null,\n    $titlebar: null,\n    $tabContainer: null,\n    $fieldsContainer: null,\n    $previewContainer: null,\n    $actionMenu: null,\n    $collapsedInput: null,\n\n    tabManager: null,\n    actionDisclosure: null,\n    formObserver: null,\n    visibleLayoutElements: null,\n    cancelToken: null,\n    ignoreFailedRequest: false,\n\n    isNew: null,\n    id: null,\n\n    collapsed: false,\n\n    init: function (matrix, $container) {\n      this.matrix = matrix;\n      this.$container = $container;\n      this.$titlebar = $container.children('.titlebar');\n      this.$tabContainer = this.$titlebar.children('.matrixblock-tabs');\n      this.$previewContainer = this.$titlebar.children('.preview');\n      this.$fieldsContainer = $container.children('.fields');\n\n      this.$container.data('entry', this);\n\n      this.id = this.$container.data('id');\n      this.isNew =\n        !this.id ||\n        (typeof this.id === 'string' && this.id.substring(0, 3) === 'new');\n\n      if (this.$tabContainer.length) {\n        this.tabManager = Craft.MatrixInput.initTabs(this.$tabContainer);\n      }\n\n      const $actionMenuBtn = this.$container.find('> .actions > .action-btn');\n      const actionDisclosure =\n        $actionMenuBtn.data('disclosureMenu') ||\n        new Garnish.DisclosureMenu($actionMenuBtn);\n\n      this.$actionMenu = actionDisclosure.$container;\n      this.actionDisclosure = actionDisclosure;\n\n      actionDisclosure.on('show', () => {\n        this.$container.addClass('active');\n        const hideActions = [];\n\n        if (this.collapsed) {\n          hideActions.push('collapse');\n        } else {\n          hideActions.push('expand');\n        }\n\n        if (this.$container.hasClass('disabled-entry')) {\n          hideActions.push('disable');\n        } else {\n          hideActions.push('enable');\n        }\n\n        if (!this.$container.prev('.matrixblock').length) {\n          hideActions.push('moveUp');\n        }\n\n        if (!this.$container.next('.matrixblock').length) {\n          hideActions.push('moveDown');\n        }\n\n        if (!this.matrix.canAddMoreEntries()) {\n          hideActions.push('add');\n        }\n\n        const $buttons = this.$actionMenu.find('button[data-action]');\n        const $hideButtons = hideActions.length\n          ? $buttons.filter(\n              hideActions.map((a) => `[data-action=${a}]`).join(',')\n            )\n          : $();\n\n        const disclosureMenu = this.$actionMenu.data('disclosureMenu');\n        $hideButtons.each((i, button) => {\n          disclosureMenu.hideItem(button);\n        });\n        $buttons.not($hideButtons).each((i, button) => {\n          disclosureMenu.showItem(button);\n        });\n      });\n\n      actionDisclosure.on('hide', () => {\n        this.$container.removeClass('active');\n      });\n\n      this.$actionMenuOptions = this.$actionMenu.find('button[data-action]');\n\n      this.addListener(\n        this.$actionMenuOptions,\n        'activate',\n        this.handleActionClick\n      );\n\n      // Was this entry already collapsed?\n      if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n        this.collapse();\n      }\n\n      this._handleTitleBarClick = function (ev) {\n        // don't expand/collapse the matrix \"block\" if double tapping the tabs\n        if (!$(ev.target).closest('.tab-label').length) {\n          ev.preventDefault();\n          this.toggle();\n        }\n      };\n\n      this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n\n      this.visibleLayoutElements = this.$container.data(\n        'visible-layout-elements'\n      );\n      this.formObserver = new Craft.FormObserver(this.$container, (data) => {\n        this.updateFieldLayout(data);\n      });\n    },\n\n    toggle: function () {\n      if (this.collapsed) {\n        this.expand();\n      } else {\n        this.collapse(true);\n      }\n    },\n\n    collapse: function (animate) {\n      if (this.collapsed) {\n        return;\n      }\n\n      this.$container.addClass('collapsed');\n\n      let previewHtml = '';\n      const $fields = this.$fieldsContainer.children().children();\n\n      for (let i = 0; i < $fields.length; i++) {\n        const $field = $($fields[i]);\n        const $inputs = $field\n          .children('.input')\n          .find('select,input[type!=\"hidden\"],textarea,.label');\n        let inputPreviewText = '';\n\n        for (let j = 0; j < $inputs.length; j++) {\n          const $input = $($inputs[j]);\n          let value;\n\n          if ($input.hasClass('label')) {\n            const $lightswitch = $input.closest('.lightswitch');\n            if (\n              $lightswitch.length &&\n              (($lightswitch.hasClass('on') && $input.hasClass('off')) ||\n                (!$lightswitch.hasClass('on') && $input.hasClass('on')))\n            ) {\n              continue;\n            }\n\n            if ($input.closest('button[aria-pressed=false]').length) {\n              continue;\n            }\n\n            value = $input.text();\n          } else {\n            value = Craft.getText(this._inputPreviewText($input));\n          }\n\n          if (Array.isArray(value)) {\n            value = value.join(', ');\n          }\n\n          if (value) {\n            value = Craft.escapeHtml(value).trim();\n\n            if (value) {\n              if (inputPreviewText) {\n                inputPreviewText += ', ';\n              }\n\n              inputPreviewText += value;\n            }\n          }\n        }\n\n        if (inputPreviewText) {\n          previewHtml +=\n            (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n        }\n      }\n\n      this.$previewContainer.html(previewHtml);\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      if (animate && !Garnish.prefersReducedMotion()) {\n        this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n        this.$container.velocity({height: 30}, 'fast');\n      } else {\n        this.$previewContainer.show();\n        this.$fieldsContainer.hide();\n        this.$container.css({height: 30});\n      }\n\n      this.$tabContainer.hide();\n\n      // Remember that?\n      if (!this.isNew) {\n        Craft.MatrixInput.rememberCollapsedEntryId(this.id);\n      } else {\n        if (!this.$collapsedInput) {\n          this.$collapsedInput = $(\n            '<input type=\"hidden\" name=\"' +\n              this.matrix.inputNamePrefix +\n              '[entries][' +\n              this.id +\n              '][collapsed]\" value=\"1\"/>'\n          ).appendTo(this.$container);\n        } else {\n          this.$collapsedInput.val('1');\n        }\n      }\n\n      this.collapsed = true;\n    },\n\n    _inputPreviewText: function ($input) {\n      if ($input.is('select,multiselect')) {\n        const labels = [];\n        const $options = $input.find('option:selected');\n        for (let k = 0; k < $options.length; k++) {\n          labels.push($options.eq(k).text());\n        }\n        return labels;\n      }\n\n      if (\n        $input.is('input[type=\"checkbox\"]:checked,input[type=\"radio\"]:checked')\n      ) {\n        const id = $input.attr('id');\n        const $label = $(`label[for=\"${id}\"]`);\n        if ($label.length) {\n          return $label.text();\n        }\n      }\n\n      return Garnish.getInputPostVal($input);\n    },\n\n    expand: function () {\n      if (!this.collapsed) {\n        return;\n      }\n\n      this.$container.removeClass('collapsed');\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      const collapsedContainerHeight = this.$container.height();\n      this.$container.height('auto');\n      this.$fieldsContainer.show();\n      const expandedContainerHeight = this.$container.height();\n      const displayValue = this.$fieldsContainer.css('display') || 'block';\n      this.$container.height(collapsedContainerHeight);\n      this.$fieldsContainer\n        .hide()\n        .velocity('fadeIn', {duration: 'fast', display: displayValue});\n\n      const animationDuration = Garnish.prefersReducedMotion() ? 0 : 'fast';\n      this.$container.velocity(\n        {height: expandedContainerHeight},\n        animationDuration,\n        () => {\n          this.$previewContainer.html('');\n          this.$container.height('auto');\n          this.$container.trigger('scroll');\n          this.$tabContainer.show();\n        }\n      );\n\n      // Remember that?\n      if (!this.isNew && typeof Storage !== 'undefined') {\n        const collapsedEntries = Craft.MatrixInput.getCollapsedEntryIds();\n        const collapsedEntriesIndex = $.inArray('' + this.id, collapsedEntries);\n\n        if (collapsedEntriesIndex !== -1) {\n          collapsedEntries.splice(collapsedEntriesIndex, 1);\n          Craft.MatrixInput.setCollapsedEntryIds(collapsedEntries);\n        }\n      }\n\n      if (!this.isNew) {\n        Craft.MatrixInput.forgetCollapsedEntryId(this.id);\n      } else if (this.$collapsedInput) {\n        this.$collapsedInput.val('');\n      }\n\n      this.collapsed = false;\n    },\n\n    disable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n      this.$container.addClass('disabled-entry');\n      this.collapse(true);\n    },\n\n    enable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n      this.$container.removeClass('disabled-entry');\n    },\n\n    moveUp: function () {\n      this.matrix.trigger('beforeMoveEntryUp', {\n        entry: this,\n      });\n      let $prev = this.$container.prev('.matrixblock');\n      if ($prev.length) {\n        this.$container.insertBefore($prev);\n        this.matrix.entrySelect.resetItemOrder();\n      }\n      this.matrix.trigger('moveEntryUp', {\n        entry: this,\n      });\n    },\n\n    moveDown: function () {\n      this.matrix.trigger('beforeMoveEntryDown', {\n        entry: this,\n      });\n      let $next = this.$container.next('.matrixblock');\n      if ($next.length) {\n        this.$container.insertAfter($next);\n        this.matrix.entrySelect.resetItemOrder();\n      }\n      this.matrix.trigger('moveEntryDown', {\n        entry: this,\n      });\n    },\n\n    duplicate: function () {\n      const type = this.$container.data('type');\n      const elementEditor = this.matrix.elementEditor;\n      this.matrix.addEntry(type, this.$container.next('.matrixblock'), true, {\n        duplicate: elementEditor?.getDraftElementId(this.id) || this.id,\n      });\n    },\n\n    handleActionClick: function (event) {\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    onActionSelect: function (option) {\n      const batchAction =\n          this.matrix.entrySelect.totalSelected > 1 &&\n          this.matrix.entrySelect.isSelected(this.$container),\n        $option = $(option);\n\n      switch ($option.data('action')) {\n        case 'collapse': {\n          if (batchAction) {\n            this.matrix.collapseSelectedEntries();\n          } else {\n            this.collapse(true);\n          }\n\n          break;\n        }\n\n        case 'expand': {\n          if (batchAction) {\n            this.matrix.expandSelectedEntries();\n          } else {\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'disable': {\n          if (batchAction) {\n            this.matrix.disableSelectedEntries();\n          } else {\n            this.disable();\n          }\n\n          break;\n        }\n\n        case 'enable': {\n          if (batchAction) {\n            this.matrix.enableSelectedEntries();\n          } else {\n            this.enable();\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'moveUp': {\n          this.moveUp();\n          break;\n        }\n\n        case 'moveDown': {\n          this.moveDown();\n          break;\n        }\n\n        case 'add': {\n          const type = $option.data('type');\n          this.matrix.addEntry(type, this.$container);\n          break;\n        }\n\n        case 'duplicate': {\n          if (batchAction) {\n            this.matrix.duplicateSelectedEntries();\n          } else {\n            this.duplicate();\n          }\n\n          break;\n        }\n\n        case 'copy': {\n          let elementInfo = [];\n          if (batchAction) {\n            let selectedItems = this.matrix.entrySelect.getSelectedItems();\n            for (let i = 0; i < selectedItems.length; i++) {\n              let entry = $(selectedItems[i]).data('entry');\n\n              elementInfo.push({\n                type: 'craft\\\\elements\\\\Entry',\n                id:\n                  entry.matrix.elementEditor?.getDraftElementId(entry.id) ||\n                  entry.id,\n                draftId: entry.$container.data('draftId'),\n                revisionId: entry.$container.data('revisionId'),\n                fieldId: entry.matrix.settings.fieldId,\n                ownerId: entry.matrix.settings.ownerId,\n                siteId: entry.matrix.settings.siteId,\n              });\n            }\n          } else {\n            elementInfo = [\n              {\n                type: 'craft\\\\elements\\\\Entry',\n                id:\n                  this.matrix.elementEditor?.getDraftElementId(this.id) ||\n                  this.id,\n                draftId: this.$container.data('draftId'),\n                revisionId: this.$container.data('revisionId'),\n                fieldId: this.matrix.settings.fieldId,\n                ownerId: this.matrix.settings.ownerId,\n                siteId: this.matrix.settings.siteId,\n              },\n            ];\n          }\n\n          Craft.cp.copyElements(elementInfo);\n          break;\n        }\n\n        case 'delete': {\n          if (batchAction) {\n            if (\n              confirm(\n                Craft.t(\n                  'app',\n                  'Are you sure you want to delete the selected entries?'\n                )\n              )\n            ) {\n              this.matrix.deleteSelectedEntries();\n            }\n          } else {\n            this.selfDestruct();\n          }\n\n          break;\n        }\n      }\n\n      this.actionDisclosure?.hide();\n    },\n\n    selfDestruct: function () {\n      this.destroy();\n\n      // Remove any inputs from the form data\n      $('[name]', this.$container).removeAttr('name');\n\n      this.$container.velocity(\n        this.matrix.getHiddenEntryCss(this.$container),\n        'fast',\n        () => {\n          this.$container.remove();\n          this.matrix.updateAddEntryBtn();\n\n          this.matrix.trigger('entryDeleted', {\n            $entry: this.$container,\n          });\n        }\n      );\n    },\n\n    updateFieldLayout(data) {\n      return new Promise((resolve, reject) => {\n        const elementEditor = this.matrix.elementEditor;\n        const baseInputName = this.$container.data('base-input-name');\n\n        // Ignore if we're already submitting the main form\n        if (elementEditor?.submittingForm) {\n          reject('Form already being submitted.');\n          return;\n        }\n\n        if (this.cancelToken) {\n          this.ignoreFailedRequest = true;\n          this.cancelToken.cancel();\n        }\n\n        const param = (n) => Craft.namespaceInputName(n, baseInputName);\n        const extraData = {\n          [param('visibleLayoutElements')]: this.visibleLayoutElements,\n          [param('elementType')]: 'craft\\\\elements\\\\Entry',\n          [param('ownerId')]: this.matrix.settings.ownerId,\n          [param('fieldId')]: this.matrix.settings.fieldId,\n          [param('sortOrder')]: this.$container.index() + 1,\n          [param('typeId')]: this.$container.data('type-id'),\n          [param('elementUid')]:\n            elementEditor?.getDraftElementUid(this.$container.data('uid')) ??\n            this.$container.data('uid'),\n        };\n\n        const selectedTabId = this.$fieldsContainer\n          .children('[data-layout-tab]:not(.hidden)')\n          .data('id');\n        if (selectedTabId) {\n          extraData[param('selectedTab')] = selectedTabId;\n        }\n\n        data += `&${$.param(extraData)}`;\n\n        this.cancelToken = axios.CancelToken.source();\n\n        Craft.sendActionRequest('POST', 'elements/update-field-layout', {\n          cancelToken: this.cancelToken.token,\n          headers: {\n            'content-type': 'application/x-www-form-urlencoded',\n            'X-Craft-Namespace': baseInputName,\n          },\n          data,\n        })\n          .then((response) => {\n            this._afterUpdateFieldLayout(\n              data,\n              selectedTabId,\n              baseInputName,\n              response\n            );\n            resolve();\n          })\n          .catch((e) => {\n            if (!this.ignoreFailedRequest) {\n              reject(e);\n            }\n            this.ignoreFailedRequest = false;\n          })\n          .finally(() => {\n            this.cancelToken = null;\n          });\n      });\n    },\n\n    async _afterUpdateFieldLayout(\n      data,\n      selectedTabId,\n      baseInputName,\n      response\n    ) {\n      // capture the new selected tab ID, in case it just changed\n      const newSelectedTabId = this.$fieldsContainer\n        .children('[data-layout-tab]:not(.hidden)')\n        .data('id');\n\n      // Update the visible elements\n      let $allTabContainers = $();\n      const visibleLayoutElements = {};\n      let changedElements = false;\n\n      for (const tabInfo of response.data.missingElements) {\n        let $tabContainer = this.$fieldsContainer.children(\n          `[data-layout-tab=\"${tabInfo.uid}\"]`\n        );\n\n        if (!$tabContainer.length) {\n          $tabContainer = $('<div/>', {\n            id: Craft.namespaceId(tabInfo.id, baseInputName),\n            class: 'flex-fields',\n            'data-id': tabInfo.id,\n            'data-layout-tab': tabInfo.uid,\n          });\n          if (tabInfo.id !== selectedTabId) {\n            $tabContainer.addClass('hidden');\n          }\n          $tabContainer.appendTo(this.$fieldsContainer);\n        }\n\n        $allTabContainers = $allTabContainers.add($tabContainer);\n\n        for (const elementInfo of tabInfo.elements) {\n          if (elementInfo.html !== false) {\n            if (!visibleLayoutElements[tabInfo.uid]) {\n              visibleLayoutElements[tabInfo.uid] = [];\n            }\n            visibleLayoutElements[tabInfo.uid].push(elementInfo.uid);\n\n            if (typeof elementInfo.html === 'string') {\n              const $oldElement = $tabContainer.children(\n                `[data-layout-element=\"${elementInfo.uid}\"]`\n              );\n              const $newElement = $(elementInfo.html);\n              if ($oldElement.length) {\n                $oldElement.replaceWith($newElement);\n              } else {\n                $newElement.appendTo($tabContainer);\n              }\n              Craft.initUiElements($newElement);\n              changedElements = true;\n            }\n          } else {\n            const $oldElement = $tabContainer.children(\n              `[data-layout-element=\"${elementInfo.uid}\"]`\n            );\n            if (\n              !$oldElement.length ||\n              !Garnish.hasAttr($oldElement, 'data-layout-element-placeholder')\n            ) {\n              const $placeholder = $('<div/>', {\n                class: 'hidden',\n                'data-layout-element': elementInfo.uid,\n                'data-layout-element-placeholder': '',\n              });\n\n              if ($oldElement.length) {\n                $oldElement.replaceWith($placeholder);\n              } else {\n                $placeholder.appendTo($tabContainer);\n              }\n\n              changedElements = true;\n            }\n          }\n        }\n      }\n\n      // Remove any unused tab content containers\n      // (`[data-layout-tab=\"\"]` == unconditional containers, so ignore those)\n      const $unusedTabContainers = this.$fieldsContainer\n        .children('[data-layout-tab]')\n        .not($allTabContainers)\n        .not('[data-layout-tab=\"\"]');\n      if ($unusedTabContainers.length) {\n        $unusedTabContainers.remove();\n        changedElements = true;\n      }\n\n      // Make the first tab visible if no others are\n      if (!$allTabContainers.filter(':not(.hidden)').length) {\n        $allTabContainers.first().removeClass('hidden');\n      }\n\n      this.visibleLayoutElements = visibleLayoutElements;\n\n      // Update the tabs\n      if (this.tabManager) {\n        this.tabManager.destroy();\n        this.tabManager = null;\n        this.$tabContainer.html('');\n      }\n\n      this.hasTabs = !!response.data.tabs;\n\n      if (this.hasTabs) {\n        this.$tabContainer.append(response.data.tabs);\n        this.tabManager = Craft.MatrixInput.initTabs(this.$tabContainer);\n\n        // was a new tab selected after the request was kicked off?\n        if (\n          selectedTabId &&\n          newSelectedTabId &&\n          selectedTabId !== newSelectedTabId\n        ) {\n          const $newSelectedTab = this.tabManager.$tabs.filter(\n            `[data-id=\"${newSelectedTabId}\"]`\n          );\n          if ($newSelectedTab.length) {\n            // if the new tab is visible - switch to it\n            this.tabManager.selectTab($newSelectedTab);\n          } else {\n            // if the new tab is not visible (e.g. hidden by a condition)\n            // switch to the first tab\n            this.tabManager.selectTab(this.tabManager.$tabs.first());\n          }\n        }\n      }\n\n      await Craft.appendHeadHtml(response.data.headHtml);\n      await Craft.appendBodyHtml(response.data.bodyHtml);\n\n      // re-grab dismissible tips, re-attach listener, hide on re-load\n      this.matrix.elementEditor?.handleDismissibleTips();\n    },\n\n    destroy: function () {\n      this.actionDisclosure?.hide();\n\n      this.tabManager?.destroy();\n      this.actionDisclosure?.destroy();\n      this.formObserver?.destroy();\n      delete this.tabManager;\n      delete this.actionDisclosure;\n      delete this.formObserver;\n\n      // alert any nested inputs that we're getting deleted\n      this.$container.trigger('delete');\n\n      this.base();\n    },\n  });\n})(jQuery);\n"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","$","jQuery","Craft","MatrixInput","Garnish","Base","extend","id","entryTypes","entryTypesByHandle","inputNamePrefix","inputIdPrefix","showingAddEntryMenu","addEntryBtnGroupWidth","addEntryBtnContainerWidth","$container","$form","$entriesContainer","$addEntryBtnContainer","$addEntryBtn","$addEntryMenuBtn","$pasteBtn","$statusMessage","entrySort","entrySelect","elementEditor","addingEntry","init","settings","_this","this","formatInputId","maxEntries","setSettings","defaults","closest","children","find","data","entryType","$entries","collapsedEntries","getCollapsedEntryIds","DragSort","ignoreHandleSelector","axis","filter","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onDragStop","trigger","onSortChange","resetItemOrder","Select","multi","vertical","target","checkboxMode","$entry","entry","Entry","inArray","collapse","addListener","_callee","_context","addClass","cp","announce","addEntry","removeClass","disclosureMenu","on","_ref2","_callee2","ev","_context2","currentTarget","_x","updateAddEntryBtn","setTimeout","ownerId","getDraftElementId","destroy","onCopyElements","elementInfo","buttonLabel","updatePasteBtn","text","canAddMoreEntries","num","undefined","canPaste","_step","_iterator","_createForOfIteratorHelper","err","_step2","entryTypeIds","map","_iterator2","info","includes","entryTypeId","pasteEntries","_this2","_callee3","_this2$elementEditor2","_this2$elementEditor","newElementInfo","response","_e$response","$newEntries","_context3","setFormValue","baseInputName","pasteElements","primaryOwnerId","fieldId","siteId","sendActionRequest","entryIds","namespace","t0","displayError","message","pause","blockHtml","append","appendHeadHtml","headHtml","appendBodyHtml","bodyHtml","initUiElements","each","addItems","firstFocusableElement","focus","resume","removeAttr","attr","_this$$pasteBtn","getCopiedElements","ui","createPasteButton","appendTo","updateStatusMessage","_this3","empty","$insertBefore","_arguments","_this4","_callee6","autofocus","params","_context6","queue","_callee5","_this4$elementEditor","_yield$Craft$sendActi","_context5","assign","ownerElementType","staticEntries","insertBefore","css","getHiddenEntryCss","velocity","opacity","_callee4","_context4","requestAnimationFrame","_this4$elementEditor2","scrollContainerToElement","not","first","getEntryTypeByHandle","collapseSelectedEntries","callOnSelectedEntries","expandSelectedEntries","disableSelectedEntries","enableSelectedEntries","deleteSelectedEntries","duplicateSelectedEntries","fn","$selectedItems","eq","marginBottom","outerHeight","_this$entrySort","_this$entrySelect","container","_$$data","base","collapsedEntryStorageKey","systemUid","localStorage","filterArray","split","setCollapsedEntryIds","ids","join","rememberCollapsedEntryId","Storage","forgetCollapsedEntryId","collapsedEntriesIndex","splice","initTabs","$tabs","tabManager","Tabs","$menuBtn","preventDefault","href","$tab","$win","$doc","matrix","$titlebar","$tabContainer","$fieldsContainer","$previewContainer","$actionMenu","$collapsedInput","actionDisclosure","formObserver","visibleLayoutElements","cancelToken","ignoreFailedRequest","isNew","collapsed","_this5","substring","$actionMenuBtn","DisclosureMenu","hideActions","$buttons","$hideButtons","concat","button","hideItem","showItem","$actionMenuOptions","handleActionClick","hasAttr","_handleTitleBarClick","toggle","FormObserver","updateFieldLayout","expand","animate","previewHtml","$fields","$inputs","inputPreviewText","j","$input","$lightswitch","getText","_inputPreviewText","Array","isArray","escapeHtml","trim","html","prefersReducedMotion","duration","height","show","hide","val","is","labels","$options","k","$label","getInputPostVal","_this6","collapsedContainerHeight","expandedContainerHeight","displayValue","display","animationDuration","disable","enable","moveUp","$prev","moveDown","$next","insertAfter","duplicate","event","onActionSelect","option","_this$actionDisclosur","batchAction","totalSelected","isSelected","$option","_this$matrix$elementE","selectedItems","_entry$matrix$element","draftId","revisionId","copyElements","confirm","selfDestruct","_this7","remove","_this8","reject","_elementEditor$getDra","submittingForm","cancel","param","namespaceInputName","extraData","_defineProperty","index","getDraftElementUid","selectedTabId","axios","CancelToken","source","token","headers","_afterUpdateFieldLayout","finally","_this9","_callee7","_this9$matrix$element","newSelectedTabId","$allTabContainers","_iterator3","_step3","tabInfo","_iterator4","_step4","$oldElement","$newElement","_$oldElement","$placeholder","$unusedTabContainers","$newSelectedTab","_context7","missingElements","uid","namespaceId","class","add","elements","replaceWith","hasTabs","tabs","selectTab","handleDismissibleTips","_this$actionDisclosur2","_this$tabManager","_this$actionDisclosur3","_this$formObserver"],"sourceRoot":""}